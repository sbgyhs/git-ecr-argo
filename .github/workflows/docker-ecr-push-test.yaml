name: Build, Tag, and Push Docker Images to Amazon ECR

on: [push]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-northeast-2
      ECR_REGISTRY: "058264317535.dkr.ecr.ap-northeast-2.amazonaws.com"
      ECR_REPOSITORY: "skylo-ecr"
      IMAGE_TAG: ${{ github.sha }}
      BUILD_NUMBER: ${{ github.run_number }}  # GitHub Actions의 빌드 번호를 사용

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push all Docker images to Amazon ECR
      env:
        IMAGE_TAG: ${{ env.IMAGE_TAG }}
        BUILD_NUMBER: ${{ env.BUILD_NUMBER }}
        ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
        ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
      run: |
        # Find all Dockerfile.* files and process them
        for DOCKERFILE in $(find "Collection_of_Dockerfiles" -type f -name 'Dockerfile.*'); do
          # Extract the base name of the Dockerfile to use as the image tag
          BASE_NAME=$(basename $DOCKERFILE)
          IMAGE_NAME="${BASE_NAME#Dockerfile.}"
          
          echo "Processing Dockerfile: $DOCKERFILE"
          
          # Build the Docker image
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_NAME-$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_NAME-$BUILD_NUMBER -f $DOCKERFILE .
          
          # Push the Docker image to ECR
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_NAME-$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_NAME-$BUILD_NUMBER
          
          # Optionally, set output variable for subsequent steps
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_NAME-$IMAGE_TAG" >> $GITHUB_ENV
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_NAME-$BUILD_NUMBER" >> $GITHUB_ENV
        done
