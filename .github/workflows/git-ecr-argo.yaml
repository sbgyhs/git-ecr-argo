name: git-ecr-argo

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: my-ecr-repository

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID2 }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY2 }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Checkout git-ecr-argo repository
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.GIT_TO_GIT }}
        fetch-depth: 0  # Ensure the full history is fetched

    - name: Add and Push to Argo repository
      run: |
        git remote add argo https://github.com/sbgyhs/Argo.git
        git fetch argo
        git checkout main
        git merge argo/main || git merge --strategy-option theirs argo/main
        git push argo main
      env:
        GH_TOKEN: ${{ secrets.GIT_TO_GIT }}
