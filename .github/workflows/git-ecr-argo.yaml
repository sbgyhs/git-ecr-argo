name: git-ecr-argo

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: my-ecr-repository
  GITHUB_USER: GitHub Actions
  GITHUB_EMAIL: actions@github.com
  GITHUB_ID: sbgyhs
  GITHUB_REPO: Argo
  DOCKERHUB_ID: yhs0728
  DOCKERHUB_REPO: mywebapp
  BUILD_NUMBER: ${{ github.run_number }}  # GitHub Actions의 실행 번호 사용

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID2 }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY2 }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Checkout git-ecr-argo repository
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.GIT_TO_GIT }}

    - name: Configure Git user
      run: |
        git config user.name "${{ env.GITHUB_USER }}"
        git config user.email "${{ env.GITHUB_EMAIL }}"

    - name: Update Kubernetes manifests & Push to Argo repository
      run: |
        docker run --rm \
          -e GITHUB_USER="${{ env.GITHUB_USER }}" \
          -e GITHUB_EMAIL="${{ env.GITHUB_EMAIL }}" \
          -e GITHUB_ID="${{ env.GITHUB_ID }}" \
          -e GITHUB_REPO="${{ env.GITHUB_REPO }}" \
          -e DOCKERHUB_ID="${{ env.DOCKERHUB_ID }}" \
          -e DOCKERHUB_REPO="${{ env.DOCKERHUB_REPO }}" \
          -e BUILD_NUMBER="${{ env.BUILD_NUMBER }}" \
          -v ${{ github.workspace }}:/workspace \
          alpine/git sh -c "
          git config --global user.name \"${GITHUB_USER}\"
          git config --global user.email \"${GITHUB_EMAIL}\"
          cd /workspace
          sed -i \"s/image:.*/image: ${DOCKERHUB_ID}\/${DOCKERHUB_REPO}:${BUILD_NUMBER}/g\" deployment.yaml
          git add deployment.yaml
          git commit -m \"Update deployment.yaml with image tag ${BUILD_NUMBER}\"
          git push origin main
          "
      env:
        GH_TOKEN: ${{ secrets.GIT_TO_GIT }}

